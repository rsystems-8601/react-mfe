import { forwardRef, useImperativeHandle, useRef } from "react";

export type inputRef={focus:()=>void}
const MyInput = forwardRef<inputRef,HTMLInputElement>(({ label, ...otherProps }: any, ref) => {
  const inputRef = useRef<HTMLInputElement>()
 

  useImperativeHandle(ref,()=>({
    focus:()=>inputRef.current?.focus(),
    
  }))


  return (
    <label>
      {label}
      <input {...otherProps} ref={inputRef}   />
    </label>
  );
});

export default MyInput;
